<!--
  Licensed to Cloudera, Inc. under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  Cloudera, Inc. licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.cloudera</groupId>
    <artifactId>csd</artifactId>
    <version>5.13.0</version>
  </parent>

  <groupId>com.cloudera.csd</groupId>
  <artifactId>KAFKA</artifactId>
  <version>5.13.0</version>
  <name>Kafka CSD</name>
  <packaging>jar</packaging>

    <properties>
        <kafka.version>0.8.2.0-kafka-1.3.1</kafka.version>
    </properties>


  <profiles>
    <profile>
      <id>clover</id>
      <build>
        <plugins>
	  <plugin>
            <groupId>com.cloudera.enterprise</groupId>
            <artifactId>schema-validator-maven-plugin</artifactId>
	    <dependencies>
              <dependency>
		<version>${clover.version}</version>
		<groupId>com.atlassian.clover</groupId>
		<artifactId>clover</artifactId>
              </dependency>
	    </dependencies>
	  </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
	  <version>${clover.version}</version>
	  <groupId>com.atlassian.clover</groupId>
	  <artifactId>clover</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

    <build>
    <plugins>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
            <source>1.6</source>
            <target>1.6</target>
        </configuration>
    </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <descriptor>assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2</version>
            <executions>
                <!-- Not versioning Kafka mdl for now because we don't have Kafka version in cdh5. -->
                <!-- Generate the codahale monitoring definitions for Kafka -->
                <execution>
                    <configuration>
                        <executable>java</executable>
                        <arguments>
                            <argument>-classpath</argument>
                            <!-- Automatically creates the classpath using all project
                                 dependencies, also adding the project build directory -->
                            <classpath/>
                            <argument>org.apache.kafka.metrics.KafkaServiceMetricsSchemaGenerator</argument>
                            <argument>-o</argument>
                            <argument>${project.build.directory}/kafka_codahale_fixture.json</argument>
                        </arguments>
                    </configuration>
                    <id>generate_codahale_schema</id>
                    <phase>process-classes</phase>
                    <goals>
                        <goal>exec</goal>
                    </goals>
                </execution>
                <!-- Generate the metric conventions. -->
                <execution>
                    <configuration>
                        <executable>java</executable>
                        <arguments>
                            <argument>-classpath</argument>
                            <!-- Automatically creates the classpath using all project
                                 dependencies, also adding the project build directory -->
                            <classpath/>
                            <argument>com.cloudera.csd.tools.codahale.CodahaleMetricsServletMetricConventionsGenerator</argument>
                            <argument>${project.build.directory}/metric_conventions.json</argument>
                        </arguments>
                    </configuration>
                    <id>generate_metric_conventions</id>
                    <phase>process-classes</phase>
                    <goals>
                        <goal>exec</goal>
                    </goals>
                </execution>
                <!-- generate the kafka mdl file -->
                <execution>
                    <configuration>
                        <executable>java</executable>
                        <arguments>
                            <argument>-classpath</argument>
                            <!-- Automatically creates the classpath using all project
                                 dependencies, also adding the project build directory -->
                            <classpath/>
                            <argument>com.cloudera.csd.tools.MetricTools</argument>
                            <argument>-t</argument><argument>generate</argument>
                            <argument>--mdl</argument>
                            <argument>${project.build.directory}/../src/main/resources/kafka_base.mdl</argument>
                            <argument>--adapter</argument>
                            <argument>com.cloudera.csd.tools.codahale.CodahaleMetricAdapter</argument>
                            <argument>--fixture</argument>
                            <argument>${project.build.directory}/kafka_codahale_fixture.json</argument>
                            <argument>--conventions</argument>
                            <argument>${project.build.directory}/metric_conventions.json</argument>
                            <argument>--output</argument>
                            <argument>${project.build.directory}/kafka_base_and_codahale.mdl</argument>
                        </arguments>
                    </configuration>
                    <id>generate_kafka_monitoring_definitions</id>
                    <phase>process-classes</phase>
                    <goals>
                        <goal>exec</goal>
                    </goals>
                </execution>
                <!-- Add additional, non-codahale metrics to the mdl file. -->
                <execution>
                  <configuration>
                    <executable>${java.home}/bin/java</executable>
                    <arguments>
                      <argument>-classpath</argument>
                      <!-- Automatically creates the classpath using all project
                           dependencies, also adding the project build directory -->
                      <classpath/>
                      <argument>com.cloudera.csd.tools.MetricTools</argument>
                      <argument>-t</argument><argument>addMetrics</argument>
                      <argument>--mdl</argument>
                      <argument>${project.build.directory}/kafka_base_and_codahale.mdl</argument>
                      <argument>--fixture</argument>
                      <argument>${project.build.directory}/common_metrics_fixture.json</argument>
                      <argument>--output</argument>
                      <argument>${project.build.outputDirectory}/service.mdl</argument>
                    </arguments>
                  </configuration>
                  <id>add_additional_metrics</id>
                  <phase>process-classes</phase>
                  <goals>
                    <goal>exec</goal>
                  </goals>
                </execution>
            </executions>
        </plugin>
      <plugin>
        <groupId>com.cloudera.enterprise</groupId>
        <artifactId>schema-validator-maven-plugin</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <id>validate-generated-schema</id>
            <phase>test</phase>
            <goals>
              <goal>validate</goal>
            </goals>
            <configuration>
              <sourceDirectory>target</sourceDirectory>
              <strictMode>true</strictMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

    <dependencies>
        <dependency>
            <groupId>com.cloudera.cmf.schema</groupId>
            <artifactId>cloudera-manager-schema</artifactId>
            <version>5.13.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.10</artifactId>
            <version>${kafka.version}</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>cloudera-mirrors</id>
            <url>http://maven.jenkins.cloudera.com:8081/artifactory/cloudera-mirrors</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>cloudera-snapshot-internal</id>
            <url>http://maven.jenkins.cloudera.com:8081/artifactory/libs-snapshot-local</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>cloudera-release-internal</id>
            <url>http://maven.jenkins.cloudera.com:8081/artifactory/libs-release-local</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>cloudera</id>
            <url>https://repository.cloudera.com/artifactory/cdh-releases-rcs</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>cloudera-snapshot</id>
            <url>https://repository.cloudera.com/artifactory/libs-snapshot-local</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <repository>
            <id>cloudera-thirdparty</id>
            <url>https://repository.cloudera.com/artifactory/ext-release-local</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
</project>
